{"version":3,"sources":["api/firebase.js","store/auth/index.js","constants.js","store/auth/actions.js","store/auth/actionTypes.js","containers/Login/Login.js","components/Header/Header.js","components/ContactPanel/ContactPanel.js","components/InputMessage/InputMessage.js","store/app/actions.js","store/app/actionTypes.js","components/Sidebar/Contact.js","components/Sidebar/Sidebar.js","components/Message/Message.js","components/WindowChat/WindowChat.js","containers/Messanger/Messanger.js","store/auth/reducer.js","containers/App.js","store/rootReducer.js","store/app/reducer.js","store/configureStore.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","e","console","log","providerGit","auth","GithubAuthProvider","spreadUserData","res","user","name","email","split","uid","saveUserInStorage","localStorage","setItem","FB_URL","ROOT_ROUTE","process","REACT_APP_USE_GITPAGES","signIn","payload","type","Wrapper","styled","div","Input","input","WrapperButtons","Title","h4","mapDispatchToProps","authWithEmail","pass","dispatch","a","signInWithEmailAndPassword","response","userData","support","axios","get","constants","responseContacts","contacts","Object","keys","data","filter","el","message","error","registration","createUserWithEmailAndPassword","put","authGithub","signInWithPopup","connect","authStore","props","useState","valueLogin","setLogin","valuePass","setPass","login","authFunction","then","success","setTimeout","history","push","value","placeholder","onChange","target","onChangeLogin","onChangePass","Button","variant","onClick","size","header","SignOut","CurrentUser","Header","onSignOut","currentUser","style","backgroundColor","Name","p","TextDate","ContactPanel","recipient","messages","date","length","InputMessage","onSendMessage","setValue","inputRef","useRef","useEffect","current","focus","onSubmit","preventDefault","sub","ref","disabled","change","addMessage","setContact","Li","li","isSelected","Block","color","Contact","onSelect","contact","userName","slice","aside","Ul","ul","colors","selectRecipient","state","currentChatId","appStore","map","id","key","Text","Information","EmptyMessages","Message","text","author","section","WindowChat","wrapperRef","scrollTop","MainWrapper","signOut","catch","sendTyRecipientMessage","sender","prevMessages","newMessage","Date","signOutApp","JSON","stringify","database","on","snapshot","val","removeItem","info","loadUserData","exact","path","render","to","component","Messenger","initialState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","rootReducer","applyMiddleware","thunk","store","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.355e606d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\ntry {\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyDNke9iMr3CT9fPZtT3CialnX97P5VbPvs\",\r\n        authDomain: \"little-messanger.firebaseapp.com\",\r\n        databaseURL: \"https://little-messanger.firebaseio.com\",\r\n        projectId: \"little-messanger\",\r\n        storageBucket: \"little-messanger.appspot.com\",\r\n        messagingSenderId: \"536362779937\",\r\n        appId: \"1:536362779937:web:f717d221b46459e317ea60\"\r\n    };\r\n    firebase.initializeApp(firebaseConfig);\r\n} catch (e) {\r\n    console.log(e);\r\n}\r\n\r\n\r\n\r\nexport const providerGit = new firebase.auth.GithubAuthProvider();\r\n\r\n\r\n\r\n\r\nexport default firebase;","export const spreadUserData = res => {\r\n    const {user} = res || null;\r\n    return {\r\n        name: user.email.split('@')[0],\r\n        email: user.email,\r\n        uid: user.uid\r\n    };\r\n};\r\n\r\nexport const saveUserInStorage = (user) => {\r\n    localStorage.setItem('little-messenger-user', user)\r\n}","export const FB_URL = 'https://little-messanger.firebaseio.com';\r\n\r\nconst isGitPagesBuild = !!process.env.REACT_APP_USE_GITPAGES;\r\n\r\n// export const ROOT_ROUTE = isGitPagesBuild ? '/little-messenger': '';\r\n\r\nexport const ROOT_ROUTE = '/little-messenger';\r\n","import * as actionTypes from './actionTypes';\r\nimport firebase, {providerGit} from '../../api/firebase';\r\nimport * as support from './index'\r\nimport axios from 'axios'\r\nimport * as constants from '../../constants'\r\nimport { message } from 'antd';\r\n\r\nexport const loadUserData = (user) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`${constants.FB_URL}/users/${user}/.json`);\r\n        const userData =  {...response.data};\r\n        const responseContacts = await axios.get(`${constants.FB_URL}/users/.json`);\r\n        const contacts = Object.keys(responseContacts.data).filter((el) => el !== userData.email.split('@')[0]);\r\n        support.saveUserInStorage(userData.name)\r\n        dispatch(signIn({...userData, contacts}));\r\n    } catch (e)  {\r\n        message.error('Произошла ошибка');\r\n        console.log('Error', e);\r\n    }\r\n};\r\n\r\nexport const authWithEmail = (email,pass) => async (dispatch) => {\r\n    try {\r\n        const response = await firebase.auth().signInWithEmailAndPassword(email,pass);\r\n        const userData = support.spreadUserData(response);\r\n        const responseContacts = await axios.get(`${constants.FB_URL}/users/.json`);\r\n        const contacts = Object.keys(responseContacts.data).filter((el) => el !== email.split('@')[0]);\r\n        support.saveUserInStorage(userData.name)\r\n        dispatch(signIn({...userData, contacts}));\r\n        return true\r\n    } catch (e)  {\r\n        message.error('Произошла ошибка');\r\n        console.log('Error', e);\r\n    }\r\n};\r\n\r\nexport const authGithub =  () => async (dispatch) => {\r\n    try {\r\n        const response = await firebase.auth().signInWithPopup(providerGit)\r\n        const userData = support.spreadUserData(response);\r\n        const responseContacts = await axios.get(`${constants.FB_URL}/users/.json`);\r\n        const contacts = Object.keys(responseContacts.data).filter((el) => el !== userData.email.split('@')[0]);\r\n        support.saveUserInStorage(userData.name)\r\n        dispatch(signIn({...userData, contacts}));\r\n        return true\r\n    } catch (e) {\r\n        console.log(\"Error\", e)\r\n    }\r\n}\r\n\r\nexport const registration =  (email,pass) => async (dispatch) =>{\r\n    try {\r\n        const response = await firebase.auth().createUserWithEmailAndPassword(email,pass);\r\n        const userData = support.spreadUserData(response);\r\n        await axios.put(`${constants.FB_URL}/users/${userData.name}.json`, {...userData});\r\n        const responseContacts = await axios.get(`${constants.FB_URL}/users/.json`);\r\n        const contacts = Object.keys(responseContacts.data).filter((el) => el !== userData.email.split('@')[0])\r\n        support.saveUserInStorage(userData.name)\r\n        dispatch(signIn({...userData, contacts}));\r\n        return true\r\n    } catch (e)  { console.log('Error', e); }\r\n}\r\n\r\n\r\nexport const signIn = (payload) => ({\r\n    type: actionTypes.SET_USER,\r\n    payload\r\n});\r\n\r\nexport const signOut = () => {\r\n    firebase.auth().signOut().then(() => {\r\n        console.log('Logout successful');\r\n    }).catch((e) => {\r\n        console.log(e);\r\n    });\r\n    return {type: actionTypes.REMOVE_USER};\r\n};","export const SET_USER = 'USER/SET_USER';\r\nexport const REMOVE_USER = 'USER/REMOVE_USER';","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {authWithEmail,registration,authGithub} from \"../../store/auth/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button} from 'react-bootstrap'\r\nimport {message} from \"antd\";\r\nimport {ROOT_ROUTE} from \"../../constants\";\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 250px;\r\n    margin: 0 auto;\r\n        margin-top: 100px;\r\n    border: 1px solid black;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\r\n`\r\n\r\nconst Input = styled.input`\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst WrapperButtons = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 5px;\r\n`\r\n\r\nconst Title = styled.h4`\r\n    text-align: center;    \r\n`\r\n\r\nconst Login = (props) => {\r\n    const [valueLogin, setLogin] = useState('v@gmail.com');\r\n    const [valuePass, setPass] = useState('123456');\r\n    const onChangeLogin = (e) => setLogin(e.target.value);\r\n    const onChangePass = (e) => setPass(e.target.value);\r\n    const {authWithEmail,registration,authGithub} = props;\r\n    const login = (authFunction) => {\r\n        authFunction(valueLogin,valuePass).then((res) => {\r\n            if(res) {\r\n                message.success('Пользователь авторизорован');\r\n                setTimeout(() => {\r\n                    props.history.push(`${ROOT_ROUTE}/messenger`)\r\n                }, 1000)\r\n            }\r\n            else {\r\n                message.error('Произошла ошибка c авторизацией');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Title>Little messenger</Title>\r\n            <Input value={valueLogin} placeholder='Введите логин' onChange={(e) => onChangeLogin(e)}/>\r\n            <Input value={valuePass} placeholder='Введите пароль' onChange={(e) => onChangePass(e)}/>\r\n            <Button variant=\"outline-success\" onClick={() => login(authWithEmail)}>Войти</Button>\r\n             <WrapperButtons>\r\n                 <Button variant=\"outline-primary\" size=\"sm\" onClick={() => login(authGithub)}>Гитхаб</Button>\r\n                 <Button variant=\"outline-info\" size=\"sm\" onClick={() => login(registration)}>Регистрация</Button>\r\n             </WrapperButtons>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst mapStateFromProps = ({authStore}) => ({authStore});\r\n\r\nconst mapDispatchToProps = {\r\n    authWithEmail,registration,authGithub\r\n};\r\n\r\nexport default connect(mapStateFromProps,mapDispatchToProps)(Login)","import React from 'react'\nimport styled from 'styled-components'\nimport {Button} from \"react-bootstrap\";\n\nconst Wrapper = styled.header`\n    display: flex;\n    background-color: #314154;\n    text-align: center;\n    padding: 2px;\n    justify-content: space-between;\n`;\n\nconst SignOut = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-right: 10px;\n\tcolor: white;\n\t&:hover {\n\tcolor: aliceblue } \n`\n\nconst CurrentUser = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-left: 16px;\n\tcolor: white;\n`\n\nconst Header = ({onSignOut, currentUser}) => {\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<CurrentUser>\n\t\t\t\t{currentUser ? `Пользователь: ${currentUser}` : 'Пользователь: не установлен'}\n\t\t\t</CurrentUser>\n\t\t\t<SignOut>\n\t\t\t\t<Button style={{backgroundColor: '#2b5279'}} variant=\"secondary\" size='sm' onClick={onSignOut}>\n\t\t\t\t\tВыход\n\t\t\t\t</Button>\n\t\t\t</SignOut>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0 auto;\n\tbackground-color: #233343;\n`\n\nconst Name = styled.p`\n\tcolor: white;\n\tmargin: 2px;\n\tmargin-left: 16px;\n`\n\nconst TextDate = styled.p`\n\tcolor: #3d5169;\n\tmargin: 2px;\n\tmargin-left: 16px;\n\tfont-size: small;\n`\n\nconst ContactPanel = ({recipient, messages}) => {\n\tlet date = null;\n\tif(messages) {\n\t\t date = messages[messages.length - 1].date\n\n\t\tconsole.log(date)\n\t}\n\treturn (\n\t\t<Wrapper>\n\t\t\t{recipient ? <Name>Кому: {recipient}</Name> : <Name>Кому: не выбрано</Name>}\n\t\t\t{messages ? <TextDate>{date}</TextDate> : ''}\n\t\t</Wrapper>\n\t)\n}\n\nexport default ContactPanel\n","import React, {useState, useRef, useEffect} from 'react'\nimport styled from 'styled-components'\n\n\nconst Wrapper = styled.div``\n\nconst Input = styled.input`\n\tbackground-color: #142233;\n\tmin-height: 30px;\n\tborder: none;\n\tcolor: white;\n\toutline: none;\n\twidth: 100%;\n\tpadding: 15px;\n\tbox-sizing: border-box;\n`\n\nconst InputMessage = ({onSendMessage, currentUser, recipient}) => {\n\tconst [value, setValue] = useState('');\n\tconst change = (e) => setValue(e.target.value);\n\tconst sub = (e) => {\n\t\te.preventDefault();\n\t\tonSendMessage(value)\n\t\tsetValue('')\n\t};\n\tconst inputRef = useRef(null)\n\tuseEffect(() => {\n\t\tinputRef.current.focus()\n\t})\n\treturn (\n\t\t<Wrapper>\n\t\t\t<form onSubmit={(e) => sub(e)}>\n\t\t\t\t<Input ref={inputRef} placeholder='введите сообщение' disabled={!currentUser || !recipient} value={value} onChange={(e) => change(e)}/>\n\t\t\t</form>\n\t\t</Wrapper>\n\t)\n}\n\nexport default InputMessage\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios'\r\nimport * as constants from '../../constants'\r\n\r\n\r\n\r\nexport const selectRecipient = (contact,userName) =>  async (dispatch) => {\r\n    const res = await axios.get(`${constants.FB_URL}/users/${userName}/messagesList/.json`);\r\n    if (res.data) {\r\n        const messages = res.data[contact];\r\n        dispatch(setContact({recipient: contact, messages}))\r\n    }\r\n    else {\r\n        dispatch(setContact({ recipient: contact }))\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const sendTyRecipientMessage = (sender,recipient, prevMessages=[], newMessage) => async (dispatch) => {\r\n    const messages = [...prevMessages, {\r\n        author: sender,\r\n        text: newMessage,\r\n        date: +new Date()\r\n    }];\r\n    await axios.put(`${constants.FB_URL}/users/${sender}/messagesList/${recipient}.json`, messages);\r\n    await axios.put(`${constants.FB_URL}/users/${recipient}/messagesList/${sender}.json`, messages);\r\n    dispatch(addMessage(messages))\r\n}\r\n\r\nexport const addMessage = (payload) => ({\r\n    type: actionTypes.ADD_MESSAGE,\r\n    payload\r\n});\r\n\r\n\r\nexport const setContact = (payload) => ({\r\n    type: actionTypes.SET_CONTACT,\r\n    payload\r\n});\r\n\r\nexport const signOutApp = () => ({\r\n    type: actionTypes.EXIT_APP,\r\n});\r\n","export const SET_CONTACT = 'APP/SET_CONTACT';\r\nexport const ADD_MESSAGE = 'APP/ADD_MESSAGE';\r\nexport const EXIT_APP = 'APP/EXIT';","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Li = styled.li`\r\n\tlist-style: none;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 65px;\r\n    width: 100%;\r\n    background-color: ${props => props.isSelected ? \"#142233\" : \"\"};\r\n`\r\n\r\nconst Block = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\tcolor: white;\r\n\twidth: 55px;\r\n\theight: 55px;\r\n\tcursor: pointer;\r\n    border-radius: 100px;\r\n    background-color: ${props => props.color ? props.color : \"palevioletred\"};\r\n`\r\n\r\nconst Contact = ({onSelect, contact, color, userName, isSelected}) => {\r\n    return (\r\n        <Li onClick={() => onSelect(contact,userName)} isSelected={isSelected}>\r\n            <Block color={color} >\r\n                {contact && contact.slice(0,3)}\r\n            </Block>\r\n        </Li>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\nimport {connect} from 'react-redux';\nimport styled from 'styled-components'\nimport Contact from \"./Contact\";\nimport {selectRecipient,} from \"../../store/app/actions\";\n\nconst Wrapper = styled.aside`\n\tbackground-color: #233343;\n\twidth: 15%;\n\tborder-top: 1px solid #15171980;\n\tborder-bottom: 1px solid #15171980;\n\toverflow-y: auto;\n    height: 364px;\n    display: flex;\n    justify-content: center;\n}\n`\nconst Ul = styled.ul`\n\twidth: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n`\n\nconst colors = ['#980303', '#28a745', '#ffc107', '#20c997'];\n\nconst Sidebar = ({contacts, selectRecipient, userName, currentChatId}) => {\n    return (\n        <Wrapper>\n            <Ul>\n                {contacts &&\n                contacts.map((contact, id) => {\n                    const color = colors[id];\n                    return (\n                        <Contact key={contact + id}\n                                 color={color}\n                                 contact={contact}\n                                 onSelect={selectRecipient}\n\t\t\t\t\t\t\t\t isSelected={currentChatId === contact}\n                                 userName={userName}\n                        />\n                    )\n                })}\n            </Ul>\n        </Wrapper>\n    )\n}\n\nconst mapStateToProps = state => ({\n\tcurrentChatId: state.appStore.recipient,\n})\n\nconst mapDispatchToProps = {\n\tselectRecipient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    max-width: 225px;\r\n    position: relative;\r\n    padding: 5px;\r\n    background-color: #2b5279;\r\n    color: white;\r\n    margin: 5px 10px;\r\n    padding: 10px;\r\n    padding-right: 25px;\r\n    border-radius: 5px;\r\n`\r\n\r\nconst Text = styled.p`\r\n   margin: 0\r\n`\r\n\r\nconst Information = styled.p`\r\n    color: red;\r\n\tposition: relative;\r\n    left: -40%;\r\n    top: 40%;\r\n`\r\n\r\nconst Date = styled.p`\r\n    margin: 0;\r\n    font-size: small;\r\n    color: #233343;\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 10px;\r\n`\r\n\r\nconst EmptyMessages = styled.p`\r\n    display: flex;\r\n    color: white;\r\n    border: 1px solid #eee;\r\n    padding: 15px;\r\n    position: relative;\r\n    left: -40%;\r\n    top: 35%;\r\n`\r\n\r\n\r\nconst Message = ({text,recipient,author}) => {\r\n    let style = {};\r\n    if(recipient === author) {\r\n        style = { backgroundColor: '#009688' }\r\n    }\r\n    if (text === 'Сообщений нет' && recipient) {\r\n        return <EmptyMessages>{text}</EmptyMessages>\r\n    }\r\n    return (\r\n        <>\r\n            {recipient ?\r\n                <Wrapper style={style}>\r\n                    <Text>{text}</Text>\r\n                </Wrapper> :\r\n                <Information>Выберите диалог</Information>}</>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {useRef, useEffect} from 'react'\nimport styled from 'styled-components'\nimport Message from \"../Message/Message\";\n\nconst Wrapper = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: #142233;\n\twidth: 100%;\n\talign-items: flex-end;\n\tborder: 1px solid black;\n\toverflow-y: auto;\n    height: 364px;\n`\n\nconst Text = styled.p`\n\tcolor: red;\n\tposition: relative;\n    left: -40%;\n    top: 40%;\n`\n\n\nconst WindowChat = ({ messages,userName,recipient }) => {\n\tconst wrapperRef = useRef(null);\n\tuseEffect(() => {\n\t\twrapperRef.current.scrollTop = wrapperRef.current['scrollHeight'];\n\t});\n\treturn (\n\t\t<Wrapper ref={wrapperRef}>\n\t\t\t{userName ? messages ? messages.map((el,id) =>\n\t\t\t\t\t<Message text={el.text} author={el.author} key={el.text + id} recipient={recipient}/>) :\n\t\t\t\t\t<Message text='Сообщений нет' recipient={recipient}/> :\n\t\t\t\t\t<Text>Пропущена стадия логина</Text> }\n\t\t</Wrapper>\n\t)\n}\n\nexport default WindowChat\n","import React from 'react'\r\nimport Header from \"../../components/Header/Header\";\r\nimport ContactPanel from \"../../components/ContactPanel/ContactPanel\";\r\nimport InputMessage from \"../../components/InputMessage/InputMessage\";\r\nimport styled from 'styled-components'\r\nimport {signOut} from \"../../store/auth/actions\";\r\nimport {sendTyRecipientMessage,signOutApp,addMessage} from \"../../store/app/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport {message} from \"antd\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport WindowChat from \"../../components/WindowChat/WindowChat\";\r\nimport {ROOT_ROUTE} from \"../../constants\";\r\n\r\nconst Wrapper = styled.div`\r\n\tmargin: 0 auto;\r\n\tmax-width: 720px;\r\n`\r\nconst MainWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tmin-height: 320px;\r\n`\r\n\r\nconst Messenger = (props) => {\r\n    const {signOut,authStore,  appStore,sendTyRecipientMessage,signOutApp,addMessage} = props;\r\n    const {recipient,messages} = appStore;\r\n    const {email, contacts} = authStore;\r\n    const userName = props.authStore.name;\r\n    const onSendMessage = (newMessage) => {\r\n        sendTyRecipientMessage(userName, recipient, messages, newMessage)\r\n    };\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('little-messenger-user');\r\n        signOut();\r\n        signOutApp();\r\n        props.history.push(`${ROOT_ROUTE}/`);\r\n        message.info('Выполнен выход из учетной записи')\r\n    };\r\n\r\n    const prevMessages = appStore.messages ? JSON.stringify(appStore.messages) : null\r\n\r\n    const observer = firebase.database().ref(`users/${userName}/messagesList/${recipient}`);\r\n    observer.on('value', snapshot => {\r\n        const newMessages = snapshot.val() ? JSON.stringify(snapshot.val()) : null\r\n        if( newMessages !== prevMessages) {\r\n            addMessage(snapshot.val())\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                <Header onSignOut={handleSignOut} currentUser={email}/>\r\n                <ContactPanel recipient={recipient} messages={messages}/>\r\n                <MainWrapper>\r\n                    <Sidebar\r\n                        contacts={contacts}\r\n                        userName={userName}\r\n                    />\r\n                    <WindowChat\r\n                        userName={userName}\r\n                        messages={messages}\r\n                        recipient={recipient}\r\n                    />\r\n                </MainWrapper>\r\n                <InputMessage onSendMessage={onSendMessage} currentUser={email} recipient={recipient}/>\r\n            </Wrapper>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateFromProps = ({authStore, appStore}) => ({authStore, appStore});\r\n\r\nconst mapDispatchToProps = {\r\n    signOut,sendTyRecipientMessage,\r\n    signOutApp,addMessage\r\n\r\n};\r\nexport default connect(mapStateFromProps,mapDispatchToProps)(Messenger)","import * as actionTypes from './actionTypes';\r\n\r\nconst storageState = (user) => {\r\n    if(user) return {name: user};\r\n    return {}\r\n};\r\nconst initialState = storageState(localStorage['little-messenger-user']);\r\n\r\nexport default function authStore(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case actionTypes.SET_USER: {\r\n            return {...payload};\r\n        }\r\n        case actionTypes.REMOVE_USER: {\r\n            return {};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useEffect} from 'react'\nimport Login from \"./Login/Login\";\nimport Messenger from \"./Messanger/Messanger\";\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport {loadUserData} from \"../store/auth/actions\";\nimport {ROOT_ROUTE} from '../constants'\n\n\nconst App = (props) => {\n\tconst {authStore: {name}} = props;\n\tuseEffect(() => {\n\t\t\tif(name) props.loadUserData(name)\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<Route exact path={`${ROOT_ROUTE}/`} render={(props) =>  !name ? <Login {...props} /> : <Redirect to={`${ROOT_ROUTE}/messenger`}/> }/>\n\t\t\t\t<Route path={`${ROOT_ROUTE}/messenger`} component={Messenger}/>\n\t\t\t</Router>\n\t\t</>\n\t)\n};\n\nconst mapStateFromProps = ({authStore}) => ({authStore});\n\nconst mapDispatchToProps = {\n\tloadUserData\n};\n\nexport default connect(mapStateFromProps, mapDispatchToProps)(App)\n","import {combineReducers} from 'redux';\r\nimport authStore from './auth/reducer';\r\nimport appStore from \"./app/reducer\";\r\n\r\nexport default combineReducers({\r\n    authStore: authStore,\r\n    appStore: appStore\r\n});","import * as actionTypes from './actionTypes';\r\n\r\n\r\n\r\nexport default function appStore(state={}, action) {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case actionTypes.SET_CONTACT: {\r\n            return {...payload};\r\n        }\r\n        case actionTypes.ADD_MESSAGE: {\r\n            return {...state, messages: payload}\r\n        }\r\n        case actionTypes.EXIT_APP: {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\n\r\nconst configureStore = () => createStore(rootReducer,composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./containers/App\";\r\nimport configureStore from './store/configureStore';\r\nimport {Provider} from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst store = configureStore();\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n       <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}